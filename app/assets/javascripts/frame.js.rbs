class Frame
  def initialize(app , frame , posts)
    @frame = frame
    @app = app
    @posts = Array.new(posts)
    @trusses = Array.new(posts)
    0.upto(posts - 1) do | i|
      @posts[i]  = PostBeam.new(self , i )
      @trusses[i] = Truss.new(self , i)
    end
    @plate = Plate.new( self )
  end
  def set_posts(num , spacing)
    @frame.spacing = spacing #precalculated in app
    return if num == self.posts
    if(num < self.posts)
      @posts[num].remove()
      @posts.pop()
      @trusses[num].remove()
      @trusses.pop()
    else
      @posts << PostBeam.new(self , num - 1 )
      @trusses << Truss.new(self , num - 1)
    end
  end
  def offset(at)
    return @frame.spacing * ((@posts.length - 1)/2 - at)
  end
  def spacing
    return @frame.spacing
  end
  def size
    return @frame.size
  end
  def height
    return @frame.height
  end
  def width
    return @frame.width
  end
  def angle
    return @frame.truss.angle
  end
  def posts
    return @posts.length
  end
  def app
    return @app
  end
  def cube()
    cube = @app.createCube()
    cube.material.set("color" , "salmon")
    return cube
  end
  def update( frame )
    @frame = frame
    @plate.update()
    @posts.each{|p| p.update()}
    @trusses.each{|t| t.update()}
  end
end

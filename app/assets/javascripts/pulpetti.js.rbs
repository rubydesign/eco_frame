class Pulpetti < EcoModel

  def initialize( frame  )
    super(frame)
    self.cube("king")
    self.cube("rafter")
  end

  def update()
    truss_height = self.tan * self.width
    self.at("king").position( -self.width/2 , truss_height/2, 0 )
    self.at("king").scale( self.size / 2,truss_height / 2,  self.size/2 )
    self.at("rafter").rotateZ( (90 - self.angle)  )
    self.at("rafter").position( ( self.cos*self.size)/4  ,
                        self.tan*self.width/2 - self.cos*self.size/2  ,
                        0)
    self.at("rafter").scale( self.size / 2, self.rafter_length/2 + 70 ,  self.size/ 2 )
  end
  def brace_rad
    return 45* Math.PI / 180
  end
  def brace_sin
    return Math.sin(self.brace_rad)
  end
  def brace_sinm
    return Math.sin(Math.PI/2 - self.brace_rad)
  end
  def brace_cosm
    return Math.cos(Math.PI/2 - self.brace_rad)
  end
  def brace_length
    return  self.sin * self.width / 4 - self.size/2
  end
  def rafter_length
    return self.width/ self.cos
  end

end

class Floor < EcoModel

  def initialize(data)
    super(data,  "floor")
  end
  def parts()
    that = self
    return [ {id: "ground" , func: lambda{that.update_list(  1 , "ground" , "floor")}} ,
             {id: "foot" , func: lambda{that.update_pairs( that.posts , "foot" , "grey")}} ]
  end
  def update_ground(ground , i )
    ground.b_scale(1, self.x_size , self.size , self.z_size )
    ground.trans(self.x_size, -2*self.height - 6*self.size , self.z_size)
  end
  def update_foot(foot, i , side)
    foot.b_scale( side , 2*self.size, 2*self.size, 2*self.size)
    foot.trans(side*(self.width + self.size),
                  -2*self.height - 4*self.size ,  self.offset(i) + self.size)
  end
  def x_size
    return (self.width + 200)
  end
  def z_size
    return (self.length + 200)
  end
end

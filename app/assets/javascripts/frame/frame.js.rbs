class Frame < EcoModel
  def initialize()
    super(VueController._data ,  "frame")
    @parts = []
    [Floor,PostBeam,Harja,FloorBeams,Walls,
        Slope,Tuuli,Space,Shell].each {|part| self.add_part(part)}
    self.update()
  end
  def parts
    return @parts
  end
  def add_part(name)
    p = name.new(@data)
    self.add( p )
    @parts << p.id
  end
  def set_truss(arg)
    if(arg == :pulp && @data.frame.angle > 15)
      @data.frame.angle = 10
    end
    if(arg == :harja && @data.frame.angle < 15)
      @data.frame.angle = 30
    end
    was = self.components[@parts[2]]
    was.iterate {|elem| elem.visible = false}
    trusses = Harja.new(@data ) if arg == :harja
    trusses = Pulpetti.new(@data ) if arg == :pulp
    trusses = NoTruss.new(@data) if arg == :none
    self.add(trusses)
    @parts[2] = trusses.id
    self.update()
  end
  def update( )
    0.upto(@data.level) {|i| self.components[@parts[i]].update() }
  end
  def invisible( )
    @parts.each do |p|
      self.components[p].iterate {|elem| elem.visible = false}
    end
  end
end

class Tuuli < EcoModel

  def initialize(data)
    super(data, "tuuli")
  end

  def parts()
    that = self
    return [
      {id: "outer_wall" , func: lambda{that.update_pairs(that.wall_num - 1 ,"outer_wall","grey")}},
      {id: "outer_ceil" , func: lambda{that.update_pairs(that.wall_num - 1 ,"outer_ceil","grey")}}]
  end
  def update_outer_wall(outer, i , side)
    outer.b_scale( side , 0.6, self.outer_wall_height, self.wall_spacing/2)
    outer.trans(side*(self.width + 2*self.wall_ins - 0.6),
                    -2*self.height , self.wall_offset(i))
  end
  def update_outer_ceil(ceil, i , side)
    ceil.b_scale( side , 0.6 , self.outer_length , self.wall_spacing/2)
    ceil.rotZ(side* (90 + self.angle)  )
    ceil.trans(0, self.harja_at(self.floor_ins) , self.wall_offset(i) )
  end

end

class EcoModel < xeogl.Model
  def initialize(frame , id)
    super({id: id})
    @frame = frame
  end
  def at(id)
    return self.components[id + self.id]
  end
  def transforms
    translate = xeogl.Translate.new( id: "pos" + Math.random())
    rotate = xeogl.Rotate.new({xyz: [0,0,1] , parent: translate, id: "rot" + Math.random()})
    return xeogl.Scale.new( {parent: rotate, id: "scale" + Math.random()})
  end
  def cube( id , color  )
    color ="wood" unless color
    args = {  transform: self.transforms ,
              material:  @frame.material(color),
              id: id + self.id  }
    return self.add(xeogl.Entity.new( args ))
  end
  def offset(at)
    return @frame.spacing * ((@frame.posts - 1)/2 - at)
  end
  def rad
    return @frame.angle * (Math.PI / 180)
  end
  def tan
    return Math.tan(self.rad)
  end
  def sin
    return Math.sin(self.rad)
  end
  def cos
    return Math.cos(self.rad)
  end
  def spacing
    return @frame.spacing
  end
  def size
    return @frame.size
  end
  def height
    return @frame.height
  end
  def width
    return @frame.width
  end
  def length
    return @frame.spacing*(self.posts - 1)
  end
  def angle
    return @frame.angle
  end

end

class PostBeam < xeogl.Model
  def initialize( frame   , braced )
    super({})
    @frame = frame
    @post1 = frame.cube_for(self)
    @post2 = frame.cube_for(self)
    @foot1 = frame.cube_for(self,"grey")
    @foot2 = frame.cube_for(self,"grey")
    @foot1.scale( @frame.size, @frame.size, @frame.size)
    @foot2.scale( @frame.size, @frame.size, @frame.size)
    @beam = frame.cube_for(self)
    @brace1 = @frame.cube_for(self)
    @brace2 = @frame.cube_for(self)
    @brace1.rotateZ(45)
    @brace2.rotateZ(-45)
    self.update()
  end
  def braces
    return @brace1.visible
  end
  def set_brace(on)
    @brace1.visible = on
    @brace2.visible = on
  end
  def update()
    @foot1.position(@frame.width/2 ,-@frame.height  ,  0)
    @foot2.position(-@frame.width/2 ,-@frame.height ,  0)
    @beam.scale(@frame.width / 2 + @frame.size / 2,
                                    @frame.size / 2, @frame.size/2)
    @beam.position(0 , -@frame.size/2 ,0)
    self.update_post_at(@post1,  1)
    self.update_post_at(@post2, -1)
    self.update_brace_at(@brace1 , 1)
    self.update_brace_at(@brace2 , -1)
  end
  def update_post_at(post , side)
    post.position(side * @frame.width/2 , -@frame.height / 2 , 0)
    post.scale( @frame.size / 2, @frame.height / 2 , @frame.size/2)
  end
  def update_brace_at( brace , side )
    brace.scale( @frame.size / 2, self.brace_size, @frame.size / 2)
    brace.position(side*(@frame.width/2 - self.brace_size/1.41 ),
                    -self.brace_size/1.41 - @frame.size/2 , 0)
  end
  def brace_size
    size = Math.min(@frame.width / 2 , @frame.height)
    return Math.max(size / 3 , 50)
  end
  def remove_parts()
    self._remove(@beam)
    self._remove(@post2)
    self._remove(@post1)
    self._remove(@brace1)
    self._remove(@brace2)
    self._remove(@foot1)
    self._remove(@foot1)
  end
end

.graph_app
  %svg{ ":width": "total_length" , ":height": "total_width",
        ":viewbox": "'0 0 ' + total_width + ' ' + total_length" , class:  :index_graph}
    %g.frame{ ":transform": "`translate(${padd},0)`"}
      %rect.frame{ ":width": "length" , ":height": "width", fill: "none",
            stroke: "#000000",  "stroke-width": "3" }

    %line.slider{ x1: 0 ,y1: 0 , x2: 0 , ":y2": "width/3" ,
                  "stroke": "rgb(0,0,0)" , "stroke-width": 3}
    %text{x: 0 , ":y": "width / 2" , fill: "#000"}
      %tspan Width
      %tspan{x: 0, dy: 15} {{ width_slider.y.toFixed(0) }}
      %tspan{x: 0, dy: 15} cm
    %line.slider{ x1: 0 ,":y1": "2*width/3" , x2: 0 , ":y2": "width" ,
                  "stroke": "rgb(0,0,0)" , "stroke-width": 3}
    %draggable{ ":model": "width_slider" , constrainx: 1}
      %circle{ "r": 10 }

:ruby2js
  class Graph < Vue
    el ".graph_app"
    def initialize
      no = 3
      @padd = 30
      @frame = {trusses: true , posts: false}
      @width = 300
      @length = 3*300
      @width_slider = {x: 10 , y: @width}
    end

    def total_width
      return @width + @padd
    end
    def total_length
      return @length + @padd
    end
    def line
     return [ [@start,@start] ,
              [@end,@start] ,
              [@end,@end] ,
              [@start,@end],
              [@start, @start]].join(" ")
    end
  end
  gra = Graph
